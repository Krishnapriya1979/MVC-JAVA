import java.util.Scanner;
import java.util.HashMap;
import java.util.Map;

class TrieNode{

char value;
boolean isEnd;
Map<Character,TrieNode> nodes;//great way

int priority;

public TrieNode(char value) {
this.value = value;
isEnd = false;
nodes = new HashMap<>();
priority = 0;
}
}

public class TrieQues {

public static void main (String[] args){

TrieNode root = new TrieNode('0');

Scanner sc = new Scanner(System.in);

int n = sc.nextInt();
int q = sc.nextInt();
int w;

for (int i=0;i<n;i++){

String s = sc.next();
w = sc.nextInt();
putWeightAndInsert(root,s,w);
}

for (int i=0;i<q;i++){
String s = sc.next();
System.out.println(newSearch(root,s));
}

}

private static int newSearch(TrieNode root, String s) {
TrieNode temp = root;
char c;

for (int i=0;i<s.length();i++){
c = s.charAt(i);

if (!temp.nodes.containsKey(c)){
return -1;
}
temp = temp.nodes.get(c);

if(i==s.length()-1){
return temp.priority;
}
}
return -1;
}

private static void putWeightAndInsert(TrieNode root, String s, int w) {

TrieNode temp = root;
char c;

for (int i=0;i<s.length();i++){
c = s.charAt(i);
if (!temp.nodes.containsKey(c)){
temp.nodes.put(c,new TrieNode(c));
}

if(temp.priority < w){
temp.priority = w;
}

temp = temp.nodes.get(c);

if(i==s.length()-1){
temp.isEnd = true;//can be done outside

if(temp.priority < w){
temp.priority = w;
}//coz wont reach here
}
}

}

}
